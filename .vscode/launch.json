{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Arduino",
            "type": "arduino",
            "request": "launch",
            "program": "${file}",
            "cwd": "${workspaceFolder}",
            "MIMode": "gdb",
            "targetArchitecture": "arm",
            "miDebuggerPath": "",
            "debugServerPath": "",
            "debugServerArgs": "",
            "customLaunchSetupCommands": [
                {
                    "text": "target remote localhost:3333"
                },
                {
                    "text": "file \"${file}\""
                },
                {
                    "text": "load"
                },
                {
                    "text": "monitor reset halt"
                },
                {
                    "text": "monitor reset init"
                }
            ],
            "stopAtEntry": true,
            "serverStarted": "Info\\ :\\ [\\w\\d\\.]*:\\ hardware",
            "launchCompleteCommand": "exec-continue",
            "filterStderr": true,
            "args": []
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        },
        {
            "name": "Python: LISAT",
            "type": "python",
            "request": "launch",
            "module": "python_lisat.main",
            "cwd": "${workspaceFolder}/",
            "console": "integratedTerminal"
        },
        {
            "name": "Python: SerialCapture File",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/tools/tests-python-esp8266/python-audio-tools/receive_buffer.py",
            "console": "integratedTerminal"
        },
        {
            "name": "Python: Processor file",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/tests-python-esp8266/python-audio-tools/process_rms.py",
            "console": "integratedTerminal"
        }
    ]
}
